### ANY CHANGES TO THIS FILE DOES NOT REQUIRE A RESTART ###
# Each queueManager requires 9 threads to fetch its metrics concurrently and 1 main thread to run the extension.
# So for ex, if there are 2 queueManagers configured, please set the numberOfThreads to be 19 (2*9+1)
numberOfThreads: 20

#This will create it in specific Tier aka Component. Replace <COMPONENT_ID>. Please make sure to have a trailing |.
#To find out the COMPONENT_ID, please see the screen shot here https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java
metricPrefix: "Server|Component:IT|Custom Metrics|WebsphereMQ|"

queueManagers:
  - displayName: "mqIT"
    # displayName (optional). This will be your QM name that will show up in AppD metric path.
    host: "localhost"
    port: 1414

    #Actual name of the queue manager
    name: "QM1"

    #The transport type for the queue manager connection, the default is "Bindings" for a binding type connection
    #For bindings type, connection WMQ extension (i.e machine agent) need to be on the same machine on which WebbsphereMQ server is running
    #For client type, connection change it to "Client".
    transportType: "Client"

    #Channel name of the queue manager, channel should be server-conn type.
    #This field is not required in case of transportType: Bindings
    channelName: DEV.APP.SVRCONN

    #for user access level, please check "Access Permissions" section on the extensions page
    #comment out the username and password in case of transportType: Bindings.
    username: "app"
    password: "passw0rd"

    queueFilters:
        #Can provide complete queue name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
             #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
             #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM","AMQ"]


    channelFilters:
        #Can provide complete channel name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
           #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
           #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM"]

    listenerFilters:
        #Can provide complete channel name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
           #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
           #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM"]

    topicFilters:
        # For topics, IBM MQ uses the topic wildcard characters ('#' and '+') and does not treat a trailing asterisk as a wildcard
        # https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pla.doc/q005020_.htm
        include: ["#"]
        exclude:
             #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
             #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM","$SYS"]

mqMetrics:
  # This Object will extract queue manager metrics
  - metricsType: "queueMgrMetrics"
    metrics:
      include:
        - Status:
            alias: "Status"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_Q_MGR_STATUS"
            aggregationType: "OBSERVATION"
            timeRollUpType: "AVERAGE"
            clusterRollUpType: "INDIVIDUAL"
        - ConnectionCount:
            alias: "ConnectionCount"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_CONNECTION_COUNT"

        - ReusableLogSize:
            alias: "Reusable Log Size"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_REUSABLE_LOG_SIZE"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR_STATUS"

        - RestartLogSize:
            alias: "Restart Log Size"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_RESTART_LOG_SIZE"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR_STATUS"

        - ArchiveLogSize:
            alias: "Archive Log Size"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_ARCHIVE_LOG_SIZE"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR_STATUS"

sslConnection:
  trustStorePath: ""
  trustStorePassword: ""
  trustStoreEncryptedPassword: ""

  keyStorePath: ""
  keyStorePassword: ""
  keyStoreEncryptedPassword: ""

# Configure the OTLP exporter using system properties keys following the specification https://opentelemetry.io/docs/languages/java/configuration/
otlpExporter:
  otel.exporter.otlp.endpoint: http://0.0.0.0:14317
  otel.exporter.otlp.protocol: grpc